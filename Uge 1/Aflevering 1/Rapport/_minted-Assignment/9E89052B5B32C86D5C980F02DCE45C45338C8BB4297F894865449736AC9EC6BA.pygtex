\begin{Verbatim}[commandchars=\\\{\}]
\PYG{c+cp}{\PYGZsh{}include}\PYG{c+cpf}{\PYGZlt{}stdio.h\PYGZgt{} 	// fprintf, stdout, stderr.}
\PYG{c+cp}{\PYGZsh{}include}\PYG{c+cpf}{\PYGZlt{}stdlib.h\PYGZgt{}	// exit, EXIT\PYGZus{}FAILURE, EXIT\PYGZus{}SUCCESS.}
\PYG{c+cp}{\PYGZsh{}include}\PYG{c+cpf}{\PYGZlt{}string.h\PYGZgt{}	// strerror.}
\PYG{c+cp}{\PYGZsh{}include}\PYG{c+cpf}{\PYGZlt{}errno.h\PYGZgt{}	// errno.}

\PYG{c+c1}{// an array were we can index the given answer}
\PYG{k+kt}{char}\PYG{o}{*} \PYG{n}{answers}\PYG{p}{[}\PYG{l+m+mi}{4}\PYG{p}{]} \PYG{o}{=} \PYG{p}{\PYGZob{}}
	\PYG{l+s}{\PYGZdq{}empty\PYGZdq{}}\PYG{p}{,} 
	\PYG{l+s}{\PYGZdq{}very short file (no magic)\PYGZdq{}}\PYG{p}{,}
	\PYG{l+s}{\PYGZdq{}ASCII text\PYGZdq{}}\PYG{p}{,}
	\PYG{l+s}{\PYGZdq{}data\PYGZdq{}}\PYG{p}{,}
\PYG{p}{\PYGZcb{};}


\PYG{c+c1}{// print correct error for handling corrupt and missing files.}
\PYG{k+kt}{int} \PYG{n+nf}{print\PYGZus{}error}\PYG{p}{(}\PYG{k+kt}{char} \PYG{o}{*}\PYG{n}{path}\PYG{p}{,} \PYG{k+kt}{int} \PYG{n}{errnum}\PYG{p}{)\PYGZob{}}
	\PYG{k}{return} \PYG{n}{fprintf}\PYG{p}{(}\PYG{n}{stdout}\PYG{p}{,} \PYG{l+s}{\PYGZdq{}\PYGZpc{}s: cannot determine (\PYGZpc{}s)}\PYG{l+s+se}{\PYGZbs{}n}\PYG{l+s}{\PYGZdq{}}\PYG{p}{,}
		\PYG{n}{path}\PYG{p}{,} \PYG{n}{strerror}\PYG{p}{(}\PYG{n}{errnum}\PYG{p}{));}
\PYG{p}{\PYGZcb{}}

\PYG{c+c1}{// adds line terminator comment.}
\PYG{k+kt}{char}\PYG{o}{*} \PYG{n+nf}{Linecomment}\PYG{p}{(}\PYG{k+kt}{int} \PYG{n}{cr}\PYG{p}{,} \PYG{k+kt}{int} \PYG{n}{lf}\PYG{p}{)\PYGZob{}}
	\PYG{k}{if}\PYG{p}{(}\PYG{n}{lf} \PYG{o}{==} \PYG{l+m+mi}{0} \PYG{o}{\PYGZam{}\PYGZam{}} \PYG{n}{cr} \PYG{o}{\PYGZgt{}} \PYG{l+m+mi}{0}\PYG{p}{)\PYGZob{}}
		\PYG{k}{return} \PYG{l+s}{\PYGZdq{}, with CR line terminators\PYGZdq{}}\PYG{p}{;}
	\PYG{p}{\PYGZcb{}}
	\PYG{k}{if}\PYG{p}{(}\PYG{n}{lf} \PYG{o}{\PYGZgt{}} \PYG{l+m+mi}{0} \PYG{o}{\PYGZam{}\PYGZam{}} \PYG{n}{cr} \PYG{o}{\PYGZgt{}} \PYG{l+m+mi}{0}\PYG{p}{)\PYGZob{}}
		\PYG{k}{return} \PYG{l+s}{\PYGZdq{}, with CR, LF line terminators\PYGZdq{}}\PYG{p}{;}
	\PYG{p}{\PYGZcb{}}
	\PYG{k}{if}\PYG{p}{(}\PYG{n}{lf} \PYG{o}{==} \PYG{l+m+mi}{0} \PYG{o}{\PYGZam{}\PYGZam{}} \PYG{n}{cr} \PYG{o}{==} \PYG{l+m+mi}{0}\PYG{p}{)\PYGZob{}}
		\PYG{k}{return} \PYG{l+s}{\PYGZdq{}, with no line terminators\PYGZdq{}}\PYG{p}{;}
	\PYG{p}{\PYGZcb{}}
	\PYG{k}{return} \PYG{l+s}{\PYGZdq{}\PYGZdq{}}\PYG{p}{;}
\PYG{p}{\PYGZcb{}}

\PYG{c+c1}{// adds escape sequence comment.}
\PYG{k+kt}{char}\PYG{o}{*} \PYG{n+nf}{EscapeComment}\PYG{p}{(}\PYG{k+kt}{int} \PYG{n}{es}\PYG{p}{)\PYGZob{}}
	\PYG{k}{if}\PYG{p}{(}\PYG{n}{es}\PYG{p}{)\PYGZob{}}
		\PYG{k}{return} \PYG{l+s}{\PYGZdq{}, with escape sequences\PYGZdq{}}\PYG{p}{;}
	\PYG{p}{\PYGZcb{}}

	\PYG{k}{return} \PYG{l+s}{\PYGZdq{}\PYGZdq{}}\PYG{p}{;}
\PYG{p}{\PYGZcb{}}

\PYG{c+c1}{// adds overstriking comment.}
\PYG{k+kt}{char}\PYG{o}{*} \PYG{n+nf}{overstrikComment}\PYG{p}{(}\PYG{k+kt}{int} \PYG{n}{os}\PYG{p}{)\PYGZob{}}
	\PYG{k}{if}\PYG{p}{(}\PYG{n}{os}\PYG{p}{)\PYGZob{}}
		\PYG{k}{return} \PYG{l+s}{\PYGZdq{}, with overstriking\PYGZdq{}}\PYG{p}{;}
	\PYG{p}{\PYGZcb{}}

	\PYG{k}{return} \PYG{l+s}{\PYGZdq{}\PYGZdq{}}\PYG{p}{;}
\PYG{p}{\PYGZcb{}}

\PYG{k+kt}{int} \PYG{n+nf}{main}\PYG{p}{(}\PYG{k+kt}{int} \PYG{n}{argc}\PYG{p}{,} \PYG{k+kt}{char} \PYG{o}{*}\PYG{n}{argv}\PYG{p}{[])\PYGZob{}}
	
	\PYG{k+kt}{FILE} \PYG{o}{*}\PYG{n}{stream}\PYG{p}{;}	
	\PYG{k+kt}{int} \PYG{n}{cr} \PYG{o}{=} \PYG{l+m+mi}{0}\PYG{p}{;}
	\PYG{k+kt}{int} \PYG{n}{lf} \PYG{o}{=} \PYG{l+m+mi}{0}\PYG{p}{;}
	\PYG{k+kt}{int} \PYG{n}{os} \PYG{o}{=} \PYG{l+m+mi}{0}\PYG{p}{;}
	\PYG{k+kt}{int} \PYG{n}{es} \PYG{o}{=} \PYG{l+m+mi}{0}\PYG{p}{;}
	\PYG{k+kt}{char} \PYG{n}{c}\PYG{p}{;}
	
	\PYG{k+kt}{size\PYGZus{}t} \PYG{n}{size}\PYG{o}{=}\PYG{l+m+mi}{0}\PYG{p}{;}
	
	\PYG{c+c1}{// Test if the program get more then one input}
	\PYG{c+c1}{// TODO \PYGZhy{} write the correct message. 	}
	\PYG{k}{if}\PYG{p}{(}\PYG{n}{argc} \PYG{o}{!=} \PYG{l+m+mi}{2}\PYG{p}{)\PYGZob{}}
		\PYG{n}{printf}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}Usage: ./file path\PYGZdq{}}\PYG{p}{);}
		\PYG{k}{return} \PYG{n}{EXIT\PYGZus{}FAILURE}\PYG{p}{;}
	\PYG{p}{\PYGZcb{}}
	
	\PYG{c+c1}{// try to open file}
	\PYG{n}{stream} \PYG{o}{=} \PYG{n}{fopen}\PYG{p}{(}\PYG{n}{argv}\PYG{p}{[}\PYG{l+m+mi}{1}\PYG{p}{],}\PYG{l+s}{\PYGZdq{}r\PYGZdq{}}\PYG{p}{);}
	

	\PYG{c+c1}{// test for open file error.}
	\PYG{c+c1}{// errno = 2 none\PYGZhy{}existing files}
	\PYG{c+c1}{// errno = 13 no read permition.}
	\PYG{k}{if}\PYG{p}{(}\PYG{o}{!}\PYG{n}{stream}\PYG{p}{)\PYGZob{}}
		\PYG{k}{switch} \PYG{p}{(}\PYG{n}{errno}\PYG{p}{)} \PYG{p}{\PYGZob{}}
		\PYG{k}{case} \PYG{l+m+mi}{13}\PYG{o}{:}
			\PYG{n}{fprintf}\PYG{p}{(}\PYG{n}{stdout}\PYG{p}{,} \PYG{l+s}{\PYGZdq{}\PYGZpc{}s: writable, regular file, no read permission}\PYG{l+s+se}{\PYGZbs{}n}\PYG{l+s}{\PYGZdq{}}\PYG{p}{,} \PYG{n}{argv}\PYG{p}{[}\PYG{l+m+mi}{1}\PYG{p}{]);}
			\PYG{k}{break}\PYG{p}{;}

		\PYG{k}{case} \PYG{l+m+mi}{2}\PYG{o}{:}
			\PYG{n}{fprintf}\PYG{p}{(}\PYG{n}{stdout}\PYG{p}{,} \PYG{l+s}{\PYGZdq{}\PYGZpc{}s: cannot open `\PYGZpc{}s\PYGZsq{} (\PYGZpc{}s)}\PYG{l+s+se}{\PYGZbs{}n}\PYG{l+s}{\PYGZdq{}}\PYG{p}{,} \PYG{n}{argv}\PYG{p}{[}\PYG{l+m+mi}{1}\PYG{p}{],} \PYG{n}{argv}\PYG{p}{[}\PYG{l+m+mi}{1}\PYG{p}{],} \PYG{n}{strerror}\PYG{p}{(}\PYG{n}{errno}\PYG{p}{));}
			\PYG{k}{break}\PYG{p}{;}
		\PYG{k}{default}\PYG{o}{:}
			\PYG{n}{print\PYGZus{}error}\PYG{p}{(}\PYG{n}{argv}\PYG{p}{[}\PYG{l+m+mi}{1}\PYG{p}{],}\PYG{n}{errno}\PYG{p}{);}
			\PYG{k}{break}\PYG{p}{;}
		\PYG{p}{\PYGZcb{}}
		\PYG{k}{return} \PYG{n}{EXIT\PYGZus{}FAILURE}\PYG{p}{;}
	\PYG{p}{\PYGZcb{}}
	
	\PYG{c+c1}{// gets size of the file}
	\PYG{n}{fseek}\PYG{p}{(}\PYG{n}{stream}\PYG{p}{,} \PYG{l+m+mi}{0}\PYG{p}{,} \PYG{n}{SEEK\PYGZus{}END}\PYG{p}{);}
	\PYG{n}{size} \PYG{o}{=} \PYG{n}{ftell}\PYG{p}{(}\PYG{n}{stream}\PYG{p}{);}	
	\PYG{n}{fseek}\PYG{p}{(}\PYG{n}{stream}\PYG{p}{,} \PYG{l+m+mi}{0}\PYG{p}{,} \PYG{n}{SEEK\PYGZus{}SET}\PYG{p}{);}

	\PYG{c+c1}{// test for small files.}
	\PYG{k}{if}\PYG{p}{(}\PYG{n}{size} \PYG{o}{==}\PYG{l+m+mi}{1}\PYG{p}{)\PYGZob{}}
		\PYG{n}{fprintf}\PYG{p}{(}\PYG{n}{stdout}\PYG{p}{,} \PYG{l+s}{\PYGZdq{}\PYGZpc{}s: very short file (no magic)}\PYG{l+s+se}{\PYGZbs{}n}\PYG{l+s}{\PYGZdq{}}\PYG{p}{,} \PYG{n}{argv}\PYG{p}{[}\PYG{l+m+mi}{1}\PYG{p}{]);}
		\PYG{k}{return} \PYG{n}{EXIT\PYGZus{}SUCCESS}\PYG{p}{;}
	\PYG{p}{\PYGZcb{}}

	\PYG{c+c1}{// test for empty file	}
	\PYG{k}{if}\PYG{p}{(}\PYG{n}{size}\PYG{p}{)\PYGZob{}}
		\PYG{c+c1}{// assume that the file is ASCII.}
		\PYG{n}{size} \PYG{o}{=} \PYG{l+m+mi}{2}\PYG{p}{;}
		
		\PYG{c+c1}{// use do while instead since we at least once need to check c.}
		\PYG{k}{while}\PYG{p}{(}\PYG{l+m+mi}{1}\PYG{p}{)\PYGZob{}}
            
			\PYG{n}{c} \PYG{o}{=} \PYG{n}{fgetc}\PYG{p}{(}\PYG{n}{stream}\PYG{p}{);}

			\PYG{c+c1}{// testing current character against spec cases.}
			\PYG{k}{switch} \PYG{p}{(}\PYG{n}{c}\PYG{p}{)} \PYG{p}{\PYGZob{}}
				\PYG{k}{case} \PYG{n+nl}{EOF}\PYG{p}{:}
					\PYG{k}{break}\PYG{p}{;}
				
				\PYG{k}{case} \PYG{l+m+mh}{0x08}\PYG{o}{:} \PYG{c+c1}{// Overstriking}
					\PYG{n}{os}\PYG{o}{++}\PYG{p}{;}
					
				\PYG{k}{case} \PYG{l+m+mh}{0x0a}\PYG{o}{:} \PYG{c+c1}{// LF \PYGZhy{} Linefeed}
					\PYG{n}{lf}\PYG{o}{++}\PYG{p}{;}

				\PYG{k}{case} \PYG{l+m+mh}{0x0d}\PYG{o}{:} \PYG{c+c1}{// CR \PYGZhy{} carraige return}
					\PYG{n}{cr}\PYG{o}{++}\PYG{p}{;}

				\PYG{k}{case} \PYG{l+m+mh}{0x1b}\PYG{o}{:} \PYG{c+c1}{// Escape sequence.}
					\PYG{n}{es}\PYG{o}{++}\PYG{p}{;}

				\PYG{k}{default}\PYG{o}{:}
					\PYG{k}{break}\PYG{o}{:}
			

			\PYG{c+c1}{// test for none\PYGZhy{}ASCII text characters}
			\PYG{c+c1}{// (20 \PYGZlt{} c \PYGZlt{} 126 are printable chars)}
			\PYG{k}{if}\PYG{p}{((}\PYG{n}{c} \PYG{o}{\PYGZlt{}} \PYG{l+m+mh}{0x20} \PYG{o}{\PYGZam{}\PYGZam{}} \PYG{p}{(}\PYG{n}{c} \PYG{o}{\PYGZlt{}} \PYG{l+m+mh}{0x07} \PYG{o}{||} \PYG{n}{c} \PYG{o}{\PYGZgt{}} \PYG{l+m+mh}{0x0D}\PYG{p}{)} \PYG{o}{\PYGZam{}\PYGZam{}} \PYG{n}{c} \PYG{o}{!=} \PYG{l+m+mh}{0x1B}\PYG{p}{)} \PYG{o}{||} \PYG{n}{c} \PYG{o}{\PYGZgt{}} \PYG{l+m+mh}{0x7E}\PYG{p}{)\PYGZob{}}
				\PYG{c+c1}{// set size to the correct index}
				\PYG{n}{size} \PYG{o}{=} \PYG{l+m+mi}{3}\PYG{p}{;}
				\PYG{c+c1}{// prevent line termination comment.}
				\PYG{n}{cr} \PYG{o}{=} \PYG{l+m+mi}{0}\PYG{p}{;}
				\PYG{n}{lf} \PYG{o}{=} \PYG{l+m+mi}{1}\PYG{p}{;}
				\PYG{n}{os} \PYG{o}{=} \PYG{l+m+mi}{0}\PYG{p}{;}
				\PYG{n}{es} \PYG{o}{=} \PYG{l+m+mi}{0}\PYG{p}{;}
				\PYG{k}{break}\PYG{p}{;}			
			\PYG{p}{\PYGZcb{}}
			
		\PYG{p}{\PYGZcb{}}
	\PYG{p}{\PYGZcb{}}
	\PYG{k}{else}\PYG{p}{\PYGZob{}}
		\PYG{n}{cr} \PYG{o}{=} \PYG{l+m+mi}{0}\PYG{p}{;}
		\PYG{n}{lf} \PYG{o}{=} \PYG{l+m+mi}{1}\PYG{p}{;;}
	\PYG{p}{\PYGZcb{}}	
	
	\PYG{c+c1}{// print the correct answer}
	\PYG{n}{fprintf}\PYG{p}{(}\PYG{n}{stdout}\PYG{p}{,} \PYG{l+s}{\PYGZdq{}\PYGZpc{}s: \PYGZpc{}s\PYGZpc{}s\PYGZpc{}s\PYGZpc{}s}\PYG{l+s+se}{\PYGZbs{}n}\PYG{l+s}{\PYGZdq{}}\PYG{p}{,} \PYG{n}{argv}\PYG{p}{[}\PYG{l+m+mi}{1}\PYG{p}{],} \PYG{n}{answers}\PYG{p}{[}\PYG{n}{size}\PYG{p}{],} 
		\PYG{n}{Linecomment}\PYG{p}{(}\PYG{n}{cr}\PYG{p}{,}\PYG{n}{lf}\PYG{p}{),}\PYG{n}{EscapeComment}\PYG{p}{(}\PYG{n}{es}\PYG{p}{),}\PYG{n}{overstrikComment}\PYG{p}{(}\PYG{n}{os}\PYG{p}{));}

	\PYG{c+c1}{// return successfully}
	\PYG{k}{return} \PYG{n}{EXIT\PYGZus{}SUCCESS}\PYG{p}{;}	
\PYG{p}{\PYGZcb{}}
\end{Verbatim}
